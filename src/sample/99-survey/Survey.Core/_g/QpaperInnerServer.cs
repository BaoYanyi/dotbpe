// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/inner/qpaper_inner.proto
#region Designer generated code

using System; 
using System.Threading.Tasks; 
using DotBPE.Rpc; 
using DotBPE.Protocol.Amp; 
using Google.Protobuf; 

namespace Survey.Core {

//start for class AbstractQPaperInnerService
public abstract class QPaperInnerServiceBase : ServiceActor 
{
protected override int ServiceId => 20001;
//调用委托
private async Task<AmpMessage> ProcessSaveQPaperAsync(AmpMessage req)
{
SaveQPaperReq request = null;
if(req.Data == null ){
   request = new SaveQPaperReq();
}
else {
request = SaveQPaperReq.Parser.ParseFrom(req.Data);
}
var data = await SaveQPaperAsync(request);
var response = AmpMessage.CreateResponseMessage(req.ServiceId, req.MessageId);
response.Data = data.ToByteArray();
return response;
}

//抽象方法
public abstract Task<SaveQPaperRsp> SaveQPaperAsync(SaveQPaperReq request);
//调用委托
private async Task<AmpMessage> ProcessQueryQPaperListAsync(AmpMessage req)
{
QueryQPaperReq request = null;
if(req.Data == null ){
   request = new QueryQPaperReq();
}
else {
request = QueryQPaperReq.Parser.ParseFrom(req.Data);
}
var data = await QueryQPaperListAsync(request);
var response = AmpMessage.CreateResponseMessage(req.ServiceId, req.MessageId);
response.Data = data.ToByteArray();
return response;
}

//抽象方法
public abstract Task<QPaperListRsp> QueryQPaperListAsync(QueryQPaperReq request);
//调用委托
private async Task<AmpMessage> ProcessGetQPaperAsync(AmpMessage req)
{
GetQPaperReq request = null;
if(req.Data == null ){
   request = new GetQPaperReq();
}
else {
request = GetQPaperReq.Parser.ParseFrom(req.Data);
}
var data = await GetQPaperAsync(request);
var response = AmpMessage.CreateResponseMessage(req.ServiceId, req.MessageId);
response.Data = data.ToByteArray();
return response;
}

//抽象方法
public abstract Task<QPaperRsp> GetQPaperAsync(GetQPaperReq request);
public override Task<AmpMessage> ProcessAsync(AmpMessage req)
{
switch(req.MessageId){
//方法QPaperInnerService.SaveQPaper
case 1: return this.ProcessSaveQPaperAsync(req);
//方法QPaperInnerService.QueryQPaperList
case 2: return this.ProcessQueryQPaperListAsync(req);
//方法QPaperInnerService.GetQPaper
case 3: return this.ProcessGetQPaperAsync(req);
default: return base.ProcessNotFoundAsync(req);
}
}
}
//end for class AbstractQPaperInnerService
}

#endregion

