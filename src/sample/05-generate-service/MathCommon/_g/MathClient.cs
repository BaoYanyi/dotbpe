// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: math.proto
#region Designer generated code

using System; 
using System.Threading.Tasks; 
using DotBPE.Rpc; 
using DotBPE.Protocol.Amp; 
using DotBPE.Rpc.Exceptions; 
using Google.Protobuf; 

namespace MathCommon {

//start for class MathClient
public sealed class MathClient : AmpInvokeClient 
{
public MathClient(IRpcClient<AmpMessage> client) : base(client)
{
}
public MathClient(string remoteAddress) : base(remoteAddress)
{
}
public async Task<AddRes> AddAsync(AddReq request,int timeOut=3000)
{
AmpMessage message = AmpMessage.CreateRequestMessage(10005, 1);
message.Data = request.ToByteArray();
var response = await base.CallInvoker.AsyncCall(message,timeOut);
if (response == null)
{
throw new RpcException("error,response is null !");
}
if (response.Data == null)
{
return new AddRes();
}
return AddRes.Parser.ParseFrom(response.Data);
}

//同步方法
public AddRes Add(AddReq request)
{
AmpMessage message = AmpMessage.CreateRequestMessage(10005, 1);
message.Data = request.ToByteArray();
var response =  base.CallInvoker.BlockingCall(message);
if (response == null)
{
throw new RpcException("error,response is null !");
}
if (response.Data == null)
{
return new AddRes();
}
return AddRes.Parser.ParseFrom(response.Data);
}
}
//end for class MathClient
}
#endregion
